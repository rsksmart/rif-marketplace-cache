version: 2.1

commands:
  install-deps:
    steps:
      - run:
          name: "Install deps"
          command: npm ci

  run-rsk:
    steps:
      - run:
          name: 'Install and Run RSK Node'
          command: |
            docker build -t regtest -f rskj.dockerfile .
            docker run -d --name regtest-node-01  -p 4444:8545 -p 30305:30305 regtest

  install-sqlite:
    steps:
      - run:
          name: "Install SQLite"
          command: npm install sqlite3

jobs:
  check:
    parameters:
      cache:
        type: boolean
        default: true
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - when:
          condition: <<parameters.cache>>
          steps:
            - restore_cache:
                keys:
                  # when lock file changes, use increasingly general patterns to restore cache
                  - node-10-{{ .Branch }}-{{ checksum "package-lock.json" }}
                  - node-10-{{ .Branch }}-
                  - node-10-
      - install-deps
      - when:
          condition: <<parameters.cache>>
          steps:
            - save_cache:
                paths:
                  - ./node_modules
                key: node-10-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: "Commit linting"
          command: |
            git config --global user.email "you@example.com"
            git config --global user.name "Your Name"
            echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")' >> $BASH_ENV
            source $BASH_ENV
            echo "$COMMIT_MESSAGE" | npx commitlint --extends @commitlint/config-conventional
#      - run:
#          name: "Dependency check"
#          command: npx tasegir dep-check
      - run:
          name: "Code linting"
          command: npx eslint --ext .ts src/ test/
      - run:
          name: "Types check"
          command: npx tsc --noEmit


  # Run test on top of Ganache
  node-tests:
    parameters:
      version:
        type: string
      cache:
        type: boolean
        default: true
    docker:
      - image: circleci/node:<< parameters.version >>
      - image: trufflesuite/ganache-cli
        command: ganache-cli -i 8545 -e 100000000000 -l 100000000000
    environment:
      ALLOW_CONFIG_MUTATIONS: true
    steps:
      - checkout
      - when:
          condition: <<parameters.cache>>
          steps:
            - restore_cache:
                keys:
                  # when lock file changes, use increasingly general patterns to restore cache
                  - node-<< parameters.version >>-{{ .Branch }}-{{ checksum "package-lock.json" }}
                  - node-<< parameters.version >>-{{ .Branch }}-
                  - node-<< parameters.version >>-
      - install-deps
      - when:
          condition: <<parameters.cache>>
          steps:
            - save_cache:
                paths:
                  - ./node_modules
                key: node-<< parameters.version >>-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - install-sqlite
      - run:
          name: "Unit tests"
          command: npx cross-env ALLOW_CONFIG_MUTATIONS=true NODE_ENV=test npx nyc --nycrc-path=./.nycrc npx mocha --compilers ts-node/register --require source-map-support/register --full-trace --colors --exit --files ./test/unit/*.spec.ts --files ./test/unit/**/*.spec.ts --files ./test/unit/**/**/*.spec.ts --bail
      - run:
          name: "Integration tests"
          command: npx cross-env ALLOW_CONFIG_MUTATIONS=true NODE_ENV=test npx nyc --nycrc-path=./.nycrc npx mocha --compilers ts-node/register --require source-map-support/register --full-trace --colors --exit --files ./test/integration/**/*.spec.ts --files ./test/integration/**/**/*.spec.ts --bail


workflows:
  test:
    jobs:
      - check
      - node-tests:
          version: '10'
          name: node-10
          requires:
            - check
      - node-tests:
          version: '12'
          name: node-12
          requires:
            - check
      - node-tests:
          version: '14'
          name: node-14
          requires:
            - check

